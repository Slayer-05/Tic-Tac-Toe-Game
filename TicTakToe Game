/*
This Code is the property of Abdelrahman Salah a Student at The British University in Egypt.
This is a working 2 player Tic-Tac-Toe game using java swing.  
*/

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.*;

class TicTacToe implements ActionListener {
    private  Random rand = new Random();
    private JFrame frame = new JFrame();
    private JPanel title_panel = new JPanel();
    private JPanel button_panel = new JPanel();
    private JLabel label = new JLabel();
    private JButton[] buttons = new JButton[9];
    private boolean player1_turn;
    private int counter = 0;

    TicTacToe() {
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(800, 800);
        frame.getContentPane().setBackground(Color.DARK_GRAY);
        frame.setLayout(new BorderLayout());
        frame.setVisible(true);

        label.setBackground(Color.black);
        label.setForeground(Color.white);
        label.setFont(new Font("Oswald", Font.BOLD, 75));
        label.setHorizontalAlignment(JLabel.CENTER);
        label.setText("Tic-Tac-Toe ");
        label.setOpaque(true);

        title_panel.setLayout(new BorderLayout());
        title_panel.setBounds(0, 0, 800, 100);

        button_panel.setLayout(new GridLayout(3, 3));
        button_panel.setBackground(Color.gray);

        for (int i = 0; i < 9; i++) {
            buttons[i] = new JButton();
            button_panel.add(buttons[i]);
            buttons[i].setFont(new Font("Bungee Spice", Font.BOLD, 120));
            buttons[i].setFocusable(false);
            buttons[i].addActionListener(this);
        }

        title_panel.add(label);
        frame.add(title_panel, BorderLayout.NORTH);
        frame.add(button_panel);

        First();
    }

    @Override
    public void actionPerformed(ActionEvent e) {
        for (int i = 0; i < 9; i++) {
            if (e.getSource() == buttons[i]) {
                if (player1_turn) {
                    if (buttons[i].getText().isEmpty()) {
                        buttons[i].setForeground(Color. blue);
                        buttons[i].setText("X");
                        player1_turn = false;
                        label.setText("it's O's turn");
                        counter++;
                        checkWinner();
                    }
                } else {
                    if(buttons[i].getText().isEmpty()){
                    buttons[i].setForeground(Color.RED);
                    buttons[i].setText("O");
                    player1_turn = true;
                    label.setText("it's X's turn");
                    counter++;
                    checkWinner();
                    }
                }
            }
        }
    }

    public void First() {

        try {
            Thread.sleep(2000);
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        }

        if (rand.nextInt(2) == 0) {
            player1_turn = true;
            label.setText("it's X's turn");
        } else {
            player1_turn = false;
            label.setText("it's O's turn");
        }

    }

    public void checkWinner() {
        // check X wins
        if((buttons[0].getText()).equals("X") && (buttons[1].getText()).equals("X") && (buttons[2].getText()).equals("X"))
        {
            xPlayerWins(0,1,2);
        }

        if((buttons[3].getText()).equals("X") && (buttons[4].getText()).equals("X") && (buttons[5].getText()).equals("X"))
        {
            xPlayerWins(3,4,5);
        }

        if((buttons[6].getText()).equals("X") && (buttons[7].getText()).equals("X") && (buttons[8].getText()).equals("X"))
        {
            xPlayerWins(6,7,8);
        }

        if((buttons[0].getText()).equals("X") && (buttons[3].getText()).equals("X") && (buttons[6].getText()).equals("X"))
        {
            xPlayerWins(0,3,6);
        }

        if((buttons[1].getText()).equals("X") && (buttons[4].getText()).equals("X") && (buttons[7].getText()).equals("X"))
        {
            xPlayerWins(1,4,7);
        }

        if((buttons[2].getText()).equals("X") && (buttons[5].getText()).equals("X") && (buttons[8].getText()).equals("X"))
        {
            xPlayerWins(2,5,8);
        }

        if((buttons[0].getText()).equals("X") && (buttons[4].getText()).equals("X") && (buttons[8].getText()).equals("X"))
        {
            xPlayerWins(0,4,8);
        }

        if((buttons[2].getText()).equals("X") && (buttons[4].getText()).equals("X") && (buttons[6].getText()).equals("X"))
        {
            xPlayerWins(2,4,6);
        }

        // check O wins
        if((buttons[0].getText()).equals("O") && (buttons[1].getText()).equals("O") && (buttons[2].getText()).equals("O"))
        {
            oPlayerWins(0,1,2);
        }

        if((buttons[3].getText()).equals("O") && (buttons[4].getText()).equals("O") && (buttons[5].getText()).equals("O"))
        {
            oPlayerWins(3,4,5);
        }

        if((buttons[6].getText()).equals("O") && (buttons[7].getText()).equals("O") && (buttons[8].getText()).equals("O"))
        {
            oPlayerWins(6,7,8);
        }

        if((buttons[0].getText()).equals("O") && (buttons[3].getText()).equals("O") && (buttons[6].getText()).equals("O"))
        {
            oPlayerWins(0,3,6);
        }

        if((buttons[1].getText()).equals("O") && (buttons[4].getText()).equals("O") && (buttons[7].getText()).equals("O"))
        {
            oPlayerWins(1,4,7);
        }

        if((buttons[2].getText()).equals("O") && (buttons[5].getText()).equals("O") && (buttons[8].getText()).equals("O"))
        {
            oPlayerWins(2,5,8);
        }

        if((buttons[0].getText()).equals("O") && (buttons[4].getText()).equals("O") && (buttons[8].getText()).equals("O"))
        {
            oPlayerWins(0,4,8);
        }

        if((buttons[2].getText()).equals("O") && (buttons[4].getText()).equals("O") && (buttons[6].getText()).equals("O"))
        {
            oPlayerWins(2,4,6);
        }

        // check for a Draw

        if(counter == 9)
        {
            for(int i = 0; i < 9 ; i++)
            {
                buttons[i].setEnabled(false);
                buttons[i].setBackground(Color.yellow);
            }
            label.setText("Draw");
        }
    }

    public void xPlayerWins(int a, int b, int c) {
        buttons[a].setBackground(Color.GREEN);
        buttons[b].setBackground(Color.GREEN);
        buttons[c].setBackground(Color.GREEN);

        for(int i=0; i < 9; i++) {
            buttons[i].setEnabled(false);
        }
        label.setText("X Wins");
    }

    public void oPlayerWins(int a, int b, int c) {
        buttons[a].setBackground(Color.GREEN);
        buttons[b].setBackground(Color.GREEN);
        buttons[c].setBackground(Color.GREEN);

        for(int i=0; i < 9; i++) {
            buttons[i].setEnabled(false);
        }
        label.setText("O Wins");
    }
}

public class Main()
{
public static void main(String[] args)
{
TicTacToe game = new TicTacToe(); 
}
}
